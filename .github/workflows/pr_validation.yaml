# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE.
#
# To configure this workflow:
#
# https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs
# 1. Set up secrets in your workspace: GKE_PROJECT with the name of the project,
#    SA_EMAIL with the service account email, GOOGLE_APPLICATION_CREDENTIALS with
#    the Base64 encoded JSON service account key.
#
# 2. Change the values for the GKE_ZONE, GKE_CLUSTER and IMAGE environment variables (below).

name: Build and Deploy to GKE

on:
  pull_request_review_comment:
    types: [created]
    branches:
    - master

# Environment variables available to all jobs and steps in this workflow
env:
  IMAGE: nginx

jobs:
  setup-build-publish-deploy:
    name: Setup, Validate, Build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: main
    
    - name: Checkout standards repo
      uses: actions/checkout@v2
      with:
        repository: gchaware/opa-cicd-example-standards
        path: standards
    
    #opa evaluate
    - name: Evaluate standards with OPA
      run: |
        curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
        chmod u+x ./opa
        ls -lrth
        result=`./opa eval -d standards/policies/kubernetes/admission/standards.rego -i main/nginx/deployment.yaml data.kubernetes.admission.deny --format=pretty`
        echo "OPA eval returned : $result"
        if [ "$result" != "[]" ]; then
          echo "One or more policies are violated. $result"
          exit 1
        fi

    # Build the Docker image
    - name: Build
      run: |
        docker build -t gcr.io/$GKE_PROJECT/$IMAGE:$GITHUB_SHA \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" ./main/nginx